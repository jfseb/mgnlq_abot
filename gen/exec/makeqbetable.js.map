{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/exec/makeqbetable.ts"],"names":[],"mappings":";AACA;;;;;GAKG;;AAGH,+BAA+B;AAE/B,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,CAAA;AAGnC,6CAAoC;AAGpC,oCAAoC;AAEpC,4BAA4B;AAG5B,mBAA0B,UAAqB,EAAE,QAAwB;IAEvE,EAAE;IACF,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,EAAE;IACF,IAAI,gBAAgB,GAAG,mBAAK,CAAC,qBAAqB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,UAAU,CAAC,OAAO,CAAC,QAAQ;QACnB,IAAI,aAAa,GAAG,mBAAK,CAAC,qBAAqB,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;QACnE,gBAAgB,GAAG,CAAC,CAAC,YAAY,CAAC,gBAAgB,EAAC,aAAa,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IACH,EAAE,CAAA,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAE;YACN,IAAI,EAAI,yBAAyB,GAAG,KAAK,CAAC,oBAAoB,CAAC,UAAU,CAAC;YAC1E,MAAM,EAAG,EAAE;SACZ,CAAA;IACH,CAAC;IACD,IAAI,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjC,EAAE;IACF,IAAI,OAAO,GAAG,mBAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtD,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC;YACL,IAAI,EAAI,kDAAkD,GAAG,MAAM,GAAG,GAAG;YACzE,MAAM,EAAG,EAAE;SACZ,CAAA;IACH,CAAC;IACD,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,IAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7F,EAAE,CAAA,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,CAAE;YACN,IAAI,EAAI,iBAAiB,GAAG,KAAK,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,4CAA4C;YACjH,MAAM,EAAG,EAAE;SACZ,CAAA;IACH,CAAC;IACD,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAE,QAAQ,IAAK,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAE,CAAC;IACjF,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAE,QAAQ,IAAK,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,EAAE,CAAA,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrB,IAAI,GAAG,gBAAgB,GAAG,KAAK,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,yBAAyB,CAAA;IAC9F,CAAC;IACD,IAAI,IAAI,mCAAmC,GAAE,KAAK,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACjF,MAAM,CAAC;QACL,IAAI,EAAG,IAAI;QACb,MAAM,EAAE,EAAE,GAAG,EAAG,SAAS,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,EAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;KAClG,CAAC;AACJ,CAAC;AA3CD,8BA2CC","file":"exec/makeqbetable.js","sourcesContent":["\n/**\n * maketable.ts\n *\n * @file\n * @copyright (c) 2016 Gerd Forstmann\n */\n\n\nimport * as debug from 'debug';\n\nconst debuglog = debug('maketable')\n\nimport * as IMatch from '../match/ifmatch';\nimport { Model } from 'mgnlq_model';\n\n\nimport * as Utils from 'abot_utils';\n\nimport * as _ from 'lodash';\n\n\nexport function makeTable(categories : string[], theModel: IMatch.IModels ) : { text: string, action : { url? : string } }\n{\n  //\n  debuglog(\"makeTable for \" + JSON.stringify(categories));\n  //\n  var aFilteredDomains = Model.getDomainsForCategory(theModel, categories[0]);\n  categories.forEach(category => {\n          var catsForDomain = Model.getDomainsForCategory(theModel,category);\n          aFilteredDomains = _.intersection(aFilteredDomains,catsForDomain);\n  });\n  if(aFilteredDomains.length === 0) {\n    return  {\n      text :  'No commxon domains for ' + Utils.listToQuotedCommaAnd(categories),\n      action : {}\n    }\n  }\n  var domain = aFilteredDomains[0];\n  //\n  var columns = Model.getTableColumns(theModel, domain);\n  if(columns.length === 0) {\n    return {\n      text :  'Apologies, but i cannot make a table for domain ' + domain + ' ',\n      action : {}\n    }\n  }\n  var indexMap = categories.map( category =>   columns.indexOf(category) ).filter(i => i >= 0);\n  if(indexMap.length === 0) {\n    return  {\n      text :  'Apologies, but ' + Utils.listToQuotedCommaAnd(categories) + ' does not represent possible table columns',\n      action : {}\n    }\n  }\n  var text = \"\";\n  var missingMap = categories.filter( category =>  columns.indexOf(category) < 0 );\n  var usedMap = categories.filter( category =>  columns.indexOf(category) >= 0);\n  if(missingMap.length) {\n    text = \"I had to drop \" + Utils.listToQuotedCommaAnd(missingMap) + \". But here you go ...\\n\"\n  }\n  text += \"Creating and starting table with \"+ Utils.listToQuotedCommaAnd(usedMap);\n  return {\n    text : text,\n  action :{ url : `table_${domain.toLowerCase().replace(/[^a-z0-9_]/g,'_')}?c${indexMap.join(',')}` }\n  };\n}\n"],"sourceRoot":"ABC"}