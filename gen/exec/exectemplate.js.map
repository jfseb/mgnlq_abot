{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/exec/exectemplate.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;AAIH,+BAA+B;AAI/B,MAAM,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,CAAA;AAQtC,wBAA+B,OAAmC,EAAG,QAAiB;IACpF,IAAI,OAAO,GAAG,QAAQ,CAAC;IACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI;QACzC,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;QAC7C,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;QAC/C,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;IACjD,CAAC,CAAC,CAAA;IACF,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC;AARD,wCAQC;AAED,gCAAuC,SAAkB;IACvD,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACzC,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,CAAC,CAAC;IACN,OAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;QAChC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;AAClC,CAAC;AATD,wDASC","file":"exec/exectemplate.js","sourcesContent":["/**\n * Functionality to execute a certain response on the server,\n * interpreting a general model context\n *\n *\n * via a) commandline (e.g. browser startup)\n * @file\n * @copyright (c) 2016 Gerd Forstmann\n */\n\nimport * as intf from 'constants';\n\nimport * as debug from 'debug';\n\nimport *  as IFMatch from '../match/ifmatch';\n\nconst debuglog = debug('exectemplate')\n\nimport { exec } from 'child_process';\n\nimport * as IMatch from '../match/ifmatch';\nimport * as Match from '../match/match';\n\n\nexport function expandTemplate(context : {[key : string] : string} , template : string ) : string {\n  var pattern = template;\n  Object.keys(context).forEach(function (sKey) {\n    var regex = new RegExp('{' + sKey + '}', 'g')\n    pattern = pattern.replace(regex, context[sKey])\n    pattern = pattern.replace(regex, context[sKey])\n  })\n  return pattern;\n}\n\nexport function extractReplacementKeys(stemplate : string) : string[] {\n  var regex = new RegExp('{([^}]+)}', \"g\");\n  var keys = {};\n  var m;\n  while(m = regex.exec(stemplate)) {\n    var pattern = m[1];\n    keys[pattern] = 1;\n  }\n  return Object.keys(keys).sort();\n}\n\n\n"],"sourceRoot":"ABC"}