{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/exec/exec.ts"],"names":[],"mappings":"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","file":"exec/exec.js","sourcesContent":["/**\n * Functionality to execute a certain response\n *\n * via a) commandline (e.g. browser startup)\n * @file\n */\n\nimport * as intf from 'constants';\n\nimport * as debug from 'debug';\n\nimport *  as IFMatch from '../match/ifmatch';\n\nconst debuglog = debug('dispatcher')\n\nimport { exec } from 'child_process';\n\nimport * as IMatch from '../match/ifmatch';\nimport * as Match from '../match/match';\n\n\nexport const enum EnumResponseCode {\n  NOMATCH = 0,\n  EXEC,\n  QUERY\n}\n\n/**\n * Defines the interface for an analysis\n * reponse\n */\n/*\nexport interface IResponse {\n  rating : number,\n  type : EnumResponseCode,\n  query : string,\n  context : { [key:string] :string},\n  text : string,\n  action : IAction,\n  prompts : { [key :string ] : { text : string, description : any }; }\n\n\nexport const enum EnumActionType {\n  STARTURL,\n  STARTCMDLINE\n}\n\nexport interface IAction {\n  data : any,\n  type : EnumActionType,\n  pattern : string,\n  concrete : string\n}\n}*/\n\n//var exec = require('child_process').exec\n\nfunction startBrowser (oUrlAction : IFMatch.IAction) {\n  var cmd =\n  '\"%ProgramFiles(x86)%\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\" --incognito -url \"' + oUrlAction.concrete + '\"'\n  exec(cmd, function (error, stdout, stderr) {\n    if (error) {\n      console.error(`exec error: ${error}`)\n      return\n    }\n    console.log(`stdout: ${stdout}`)\n    console.log(`stderr: ${stderr}`)\n  })\n}\n\nfunction startCommandLine (scmd : IFMatch.IAction) {\n  var cmd = scmd.concrete;\n  exec(cmd, function (error, stdout, stderr) {\n    if (error) {\n      console.error(`exec error: ${error}`)\n      return\n    }\n    console.log(`stdout: ${stdout}`)\n    console.log(`stderr: ${stderr}`)\n  })\n}\n\n\nexport function expandContextIntoAction (oResult : IFMatch.IResponse) {\n  var pattern = oResult.action.pattern\n  Object.keys(oResult.context).forEach(function (sKey) {\n    var regex = new RegExp('{' + sKey + '}', 'g')\n    pattern = pattern.replace(regex, oResult.context[sKey])\n    pattern = pattern.replace(regex, oResult.context[sKey])\n  })\n  oResult.action.concrete = pattern;\n  return pattern\n}\n\n/**\n * execute some starupt\n *\n */\nfunction executeStartup (oResult: IFMatch.IResponse, cb: (err : any, a : IFMatch.IResponse) => string) {\n  if (oResult.type !== IFMatch.EnumResponseCode.EXEC) {\n    return\n  }\n  var action = oResult.action;\n  if(oResult.action.type === IFMatch.EnumActionType.STARTURL) {\n    //var ptn = expandParametersInURL(oResult)\n    startBrowser(action)\n    return action.concrete\n  } else if(oResult.action.type === IFMatch.EnumActionType.STARTCMDLINE) {\n    startCommandLine(action);\n  } else {\n    var s = (\"Don't know how to start \" + oResult.type + '\\n for \"' + oResult.query + '\"')\n    console.error(s)\n    return s\n  }\n}\n\n  function expandParametersInURL (oMergedContextResult) {\n    var ptn = oMergedContextResult.result.pattern\n    Object.keys(oMergedContextResult.context).forEach(function (sKey) {\n      var regex = new RegExp('{' + sKey + '}', 'g')\n      ptn = ptn.replace(regex, oMergedContextResult.context[sKey])\n      ptn = ptn.replace(regex, oMergedContextResult.context[sKey])\n    })\n    return ptn\n  }\n\n//import * as inputFilterRules from '../match/inputFilterRules';\n\nvar toolExecutors = {\n  \"xFLP\": {},\n  \"xFLPD\" : {}\n  /*,\n  \"unit test\" : function(match : IFMatch.IToolMatch) {\n    var unittest = match.toolmatchresult.required[\"unit test\"].matchedString;\n    var url = inputFilterRules.getUnitTestUrl(unittest);\n    return {\n      text : \"starting unit test \\\"\" + unittest + \"\\\"\"+  (url?  (' with url ' + url ) : 'no url :-(' ),\n      action : { url: url }\n    }\n  },\n  \"wiki\" : function(match : IFMatch.IToolMatch) {\n    var wiki = match.toolmatchresult.required[\"wiki\"].matchedString;\n    var url = inputFilterRules.getWikiUrl(wiki);\n    return {\n      text : \"starting wiki \" + wiki + (url?  (' with url ' + url ) : 'no url :-(' ),\n      action : { url: url }\n    }\n  } */\n};\n\nexport function execTool(match: IMatch.IToolMatch, bExplain? : boolean) : { text : string,\n      action : any } {\n        //\n    var exec = undefined;\n    if (toolExecutors[match.tool.name]) {\n      exec = toolExecutors[match.tool.name](match);\n\n    }\n    if (!exec) {\n      exec = {\n        text : \"don't know how to execute \" + match.tool.name + '\\n'\n      }\n    }\n    if ( bExplain ) {\n      exec.text = exec.text + \"\\n\" + Match.ToolMatch.dumpNice(match);\n    }\n    return exec;\n\n    // TODO invoke tool specific starter\n    /* if (oMergedContextResult.result.type === 'URL') {\n      var ptn = expandParametersInURL(oMergedContextResult)\n      startBrowser(ptn)\n      return ptn\n    } else {\n      var s = (\"Don't know how to start \" + oMergedContextResult.result.type + '\\n for \"' + oMergedContextResult.query + '\"')\n      debuglog(s)\n      return s\n    }*/\n  }\n\n\n//  executeStartup: executeStartup\n//}\n"],"sourceRoot":"ABC"}