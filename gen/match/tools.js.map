{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/tools.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;GAUG;;AASH,IAAI,SAAS,GAAG;IACd,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5C,UAAU,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;CACvD,CAAC;AAEF,IAAI,QAAQ,GAAG;IACb,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5C,UAAU,EAAE;QACV,cAAc,EAAE,EAAE;KACnB;IACD,MAAM,EAAE;QACN,QAAQ,EAAE;YACR,KAAK,EAAE;gBACL,UAAU;gBACV,QAAQ;gBACR,cAAc;aACf;YACD,UAAU,EAAE,cAAc;SAC3B;QACD,MAAM,EAAE;YACN,KAAK,EAAE;gBACL,UAAU;gBACV,QAAQ;aACT;YACD,UAAU,EAAE,cAAc;SAC3B;KACF;CACF,CAAC;AAEF,IAAI,OAAO,GAAG;IACZ,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC/D,UAAU,EAAE,EAAE;CACf,CAAC;AAEF,IAAI,SAAS,GAAG;IACd,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IAC1B,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAGF,IAAI,aAAa,GAAG;IAClB,MAAM,EAAE,WAAW;IACnB,UAAU,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;IAC/B,QAAQ,EAAE,EAAE;CACb,CAAC;AAGF,MAAM,KAAK,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAEvE,kBAAyB,CAAe,EAAE,CAAe;IACvD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC;AAFD,4BAEC;AAED;IACE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAFD,4BAEC;AAAA,CAAC;AAGF,yBAAgC,CAA4B;AAE5D,CAAC;AAFD,0CAEC","file":"match/tools.js","sourcesContent":["/**\n * @file toolmatcher\n * @module jfseb.fdevstart.toolmatcher\n * @copyright (c) Gerd Forstmann\n *\n * Match a tool record on a sentence,\n *\n * This will unify matching required and optional category words\n * with the requirements of the tool.\n *\n */\n\n// / <reference path=\"../../lib/node-4.d.ts\" />\n\nimport * as debug from 'debug';\nimport * as IMatch from './ifmatch';\n\n\n\nvar oToolFLPD = {\n  'name': 'FLPD',\n  'requires': { 'systemId': {}, 'client': {} },\n  'optional': { 'fiori catalog': {}, 'fiori group': {} }\n};\n\nvar oToolFLP = {\n  'name': 'FLP',\n  'requires': { 'systemId': {}, 'client': {} },\n  \"optional\": {\n    \"fiori intent\": {}\n  },\n  \"sets\": {\n    \"intent\": {\n      \"set\": [\n        \"systemId\",\n        \"client\",\n        \"fiori intent\"\n      ],\n      \"response\": \"_urlpattern1\"\n    },\n    \"none\": {\n      \"set\": [\n        \"systemId\",\n        \"client\"\n      ],\n      \"response\": \"_urlpattern2\"\n    }\n  }\n};\n\nvar oToolTA = {\n  'name': 'StartTA',\n  'requires': { 'transaction': {}, 'systemId': {}, 'client': {} },\n  'optional': {}\n};\n\nvar oToolWiki = {\n  'name': 'wiki',\n  'requires': { 'wiki': {} },\n  'optional': { 'wikipage': {} }\n};\n\n\nvar oToolUnitTest = {\n  'name': 'unit test',\n  'requires': { 'unit test': {} },\n  optional: {}\n};\n\n\nconst tools = [oToolWiki, oToolTA, oToolUnitTest, oToolFLPD, oToolFLP];\n\nexport function cmpTools(a: IMatch.ITool, b: IMatch.ITool) {\n  return a.name.localeCompare(b.name);\n}\n\nexport function getTools() {\n  return tools.sort(cmpTools);\n};\n\n\nexport function findMatchingSet(a : Array<IMatch.IToolMatch> ) {\n\n}"],"sourceRoot":"ABC"}