{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/analyze.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,YAAY,CAAC;;AAIb,+BAA+B;AAE/B,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AAIlC,0CAA0C;AAC1C,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAOlC,uCAA4C;AAC5C,6CAA6C;AAG7C,oBAA2B,OAAe,EAAE,KAAwB,EAAE,MAA2B,EAAE,KAAM;IACvG,YAAY,CAAC;IACb,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAI,GAAG,GAAG,iBAAM,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,sDAAsD;QACxH,IAAI,CAAC,YAAY,CAAC,CAAC;QACnB,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;AACH,CAAC;AAZD,gCAYC","file":"match/analyze.js","sourcesContent":["/**\n *\n * @module jfseb.fdevstart.analyze\n * @file analyze.ts\n * @copyright (c) 2016 Gerd Forstmann\n */\n\n\"use strict\";\n\nimport {InputFilter as InputFilter, Sentence as Sentence} from 'mgnlq_er';\n\nimport * as debug from 'debug';\n\nconst debuglog = debug('analyze');\n\n\n\nimport * as logger from '../utils/logger';\nvar perf = logger.perf('analyze');\n\n\nimport * as Utils from 'abot_utils';\n\nimport * as IMatch from './ifmatch';\n\nimport { ErBase as ErBase}  from 'mgnlq_er';\nimport * as Toolmatcher from './toolmatcher';\n\n\nexport function analyzeAll(sString: string, rules: IMatch.SplitRules, aTools: Array<IMatch.ITool>, words? ) {\n  \"use strict\";\n  if (sString.length === 0) {\n    return [];\n  } else {\n    var res = ErBase.processString2(sString, rules, words);\n    perf('matchTools');\n    var matchedTools = Toolmatcher.matchTools(res.sentences, aTools); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    perf('matchTools');\n    debuglog(\" matchedTools\" + JSON.stringify(matchedTools, undefined, 2));\n    return matchedTools;\n  }\n}\n\n"],"sourceRoot":"ABC"}