{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/toolmatcher.ts"],"names":[],"mappings":"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","file":"match/toolmatcher.js","sourcesContent":["/**\n * @file toolmatcher\n * @module jfseb.fdevstart.toolmatcher\n * @copyright (c) Gerd Forstmann\n *\n * Match a tool record on a sentence,\n *\n * This will unify matching required and optional category words\n * with the requirements of the tool.\n *\n */\n\n// / <reference path=\"../../lib/node-4.d.ts\" />\n\nimport * as debug from 'debug';\n\nimport * as IMatch from './ifmatch';\n\nimport * as Utils from 'abot_utils';\nimport { Sentence as Sentence} from 'mgnlq_er';\n\nimport { Word as OpsWord }  from 'mgnlq_er';\n\nconst Word = OpsWord.Word;\nconst Category = OpsWord.Category;\n\nconst debuglog = debug('toolmatcher');\n\nexport function matchTool(oSentence: IMatch.ISentence, oTool: IMatch.ITool): IMatch.IToolMatchResult {\n  var used = {} as { [key: number]: number };\n  var required = {} as { [key: string]: IMatch.IWord };\n  var optional = {} as { [key: string]: IMatch.IWord };\n  var matched = {} as { [key: string]: string };\n  var spurious = {} as { [key: string]: number };\n  var toolmentioned = [] as Array<IMatch.IWord>;\n  Object.keys(oTool.requires || {}).forEach(function (sCategory: string) {\n    let { word, index } = Sentence.findWordByCategory(oSentence, sCategory);\n    if (word) {\n      matched[word as any] = \"required\";\n      used[index] = 1;\n      required[sCategory] = word;\n    }\n  });\n  Object.keys(oTool.optional || {}).forEach(function (sCategory: string) {\n    var { word, index } = Sentence.findWordByCategory(oSentence, sCategory);\n    if (word) {\n      matched[word as any] = \"optional\";\n      used[index] = 1;\n      optional[sCategory] = word;\n    }\n  });\n\n  oSentence.forEach(function (oWord, index) {\n    if (!used[index] && !Word.isFiller(oWord) && !Word.isCategory(oWord)) {\n      debuglog(\"have spurious word\" + JSON.stringify(oWord));\n      if (!used[index] && oWord.category === Category.CAT_TOOL && oWord.matchedString === oTool.name ) {\n        toolmentioned.push(oWord);\n      } else {\n        spurious[oWord.matchedString] = 1;\n      }\n    }\n  });\n  debuglog('satisfied : ' + Object.keys(oTool.requires).join(\";\"));\n  debuglog('required  : ' + Object.keys(oTool.requires).join(\";\"));\n  var missing = Utils.ArrayUtils.setMinus(Object.keys(oTool.requires), Object.keys(required)).reduce(\n    function (map, sKey) {\n      map[sKey] = 1;\n      return map;\n    }, {})\n\n  return {\n    required: required,\n    missing: missing,\n    optional: optional,\n    spurious: spurious,\n    toolmentioned : toolmentioned\n  }\n}\n\nimport * as match from './match';\n\nconst ToolMatch = match.ToolMatch;\n\nexport function matchTools(aSentences: Array<IMatch.ISentence>, aTool: Array<IMatch.ITool>): IMatch.IToolMatch[] /* objectstream*/ {\n  //var stream = new streamutils.MatchStream();\n  debuglog(\"matchTools: sentences \\n\" +\n    aSentences.map(function (oSentence, index) {\n    return (index < 30) ? `[${index}]` + Sentence.rankingProduct(oSentence) + \":\" + Sentence.dumpNice(oSentence) : \"\\n\";\n    }).join(\"\\n\"));\n  var result = [];\n  aTool.forEach(function (oTool) {\n    aSentences.forEach(function (oSentence) {\n      var toolmatchresult = matchTool(oSentence, oTool);\n      var toolmatch = {\n        toolmatchresult: toolmatchresult,\n        sentence: oSentence,\n        tool : oTool,\n        rank : 0\n      } as IMatch.IToolMatch;\n      toolmatch.rank = ToolMatch.rankResult(toolmatch.toolmatchresult);\n      if (ToolMatch.isAnyMatch(toolmatch)) {\n        result.push(toolmatch);\n      }\n    })\n  });\n  result.sort(ToolMatch.compBetterMatch);\n\n  if(debuglog.enabled) {\n    debuglog(\"matchTools: ranked toolmatches\\n\" +\n      result.map(function(otoolmatch) {\n        return Sentence.dumpNice(otoolmatch.sentence) + JSON.stringify(otoolmatch);\n      }).join(\"\\n\")\n    );\n  }\n  return result;\n}"],"sourceRoot":"ABC"}