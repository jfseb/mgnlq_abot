{"version":3,"sources":["/projects/nodejs/botbuilder/mgnlq_abot/src/../src/match/operator.ts"],"names":[],"mappings":";AAAA;;;;;;;;;GASG;;AAWH;;GAEG;AACH,SAAgB,OAAO,CAAC,QAA2B,EAAE,UAAmB,EAAE,KAAc;IACtF,IAAG,CAAC,KAAK,EAAE;QACT,OAAO,KAAK,CAAC;KACd;IACD,QAAO,QAAQ,CAAC,QAAQ,EAAE;QACxB,KAAK,eAAe;YAClB,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzC,KAAK,YAAY;YACf,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,KAAK,aAAa;YAChB,OAAO,KAAK,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM;gBACtC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,CAAC;QACrE;YACE,MAAM,IAAI,KAAK,CAAC,8CAA8C,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvF;IACD,eAAe;AACjB,CAAC;AAhBD,0BAgBC","file":"operator.js","sourcesContent":["/**\n * @file operator\n * @module jfseb.fdevstart.operator\n * @copyright (c) Gerd Forstmann\n *\n * Operator implementation\n *\n * These functions expose parf the underlying model,\n *\n */\n\n// <reference path=\"../../lib/node-4.d.ts\" />\n\n\nimport * as IMatch from './ifmatch';\n\n\n\n\n\n/**\n * Note: both arguments are expected to be lowercased\n */\nexport function matches(operator : IMatch.IOperator, fragmentLC : string, strLC : string)  : boolean {\n  if(!strLC) {\n    return false;\n  }\n  switch(operator.operator) {\n    case \"starting with\":\n      return strLC.indexOf(fragmentLC) === 0;\n    case \"containing\":\n      return strLC.indexOf(fragmentLC) >= 0;\n    case \"ending with\":\n      return strLC.length >= fragmentLC.length &&\n        strLC.substring(strLC.length - fragmentLC.length) === fragmentLC;\n    default:\n      throw new Error('Unknown operator or illegal operator usage: ' + operator.operator);\n  }\n  //return false;\n}\n"],"sourceRoot":"ABC"}